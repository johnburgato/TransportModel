#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4211
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TransportModel.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="RoadNetwork")]
	public partial class RoadNetworkDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertInformationPoint(InformationPoint instance);
    partial void UpdateInformationPoint(InformationPoint instance);
    partial void DeleteInformationPoint(InformationPoint instance);
    partial void InsertLink(Link instance);
    partial void UpdateLink(Link instance);
    partial void DeleteLink(Link instance);
    partial void InsertNode(Node instance);
    partial void UpdateNode(Node instance);
    partial void DeleteNode(Node instance);
    partial void InsertRoad(Road instance);
    partial void UpdateRoad(Road instance);
    partial void DeleteRoad(Road instance);
    partial void InsertRRILink(RRILink instance);
    partial void UpdateRRILink(RRILink instance);
    partial void DeleteRRILink(RRILink instance);
    partial void InsertRRINode(RRINode instance);
    partial void UpdateRRINode(RRINode instance);
    partial void DeleteRRINode(RRINode instance);
    partial void InsertRRIRoute(RRIRoute instance);
    partial void UpdateRRIRoute(RRIRoute instance);
    partial void DeleteRRIRoute(RRIRoute instance);
    #endregion
		
		public RoadNetworkDataContext() : 
				base(global::TransportModel.Properties.Settings.Default.RoadNetworkConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public RoadNetworkDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RoadNetworkDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RoadNetworkDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RoadNetworkDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AccessRestrictionDate> AccessRestrictionDates
		{
			get
			{
				return this.GetTable<AccessRestrictionDate>();
			}
		}
		
		public System.Data.Linq.Table<AccessRestriction> AccessRestrictions
		{
			get
			{
				return this.GetTable<AccessRestriction>();
			}
		}
		
		public System.Data.Linq.Table<AccessRestrictionTime> AccessRestrictionTimes
		{
			get
			{
				return this.GetTable<AccessRestrictionTime>();
			}
		}
		
		public System.Data.Linq.Table<AttributeDefinition> AttributeDefinitions
		{
			get
			{
				return this.GetTable<AttributeDefinition>();
			}
		}
		
		public System.Data.Linq.Table<AttributeList> AttributeLists
		{
			get
			{
				return this.GetTable<AttributeList>();
			}
		}
		
		public System.Data.Linq.Table<ConditionalAttribute> ConditionalAttributes
		{
			get
			{
				return this.GetTable<ConditionalAttribute>();
			}
		}
		
		public System.Data.Linq.Table<DayType> DayTypes
		{
			get
			{
				return this.GetTable<DayType>();
			}
		}
		
		public System.Data.Linq.Table<EnumDirection> EnumDirections
		{
			get
			{
				return this.GetTable<EnumDirection>();
			}
		}
		
		public System.Data.Linq.Table<EnumRoadType> EnumRoadTypes
		{
			get
			{
				return this.GetTable<EnumRoadType>();
			}
		}
		
		public System.Data.Linq.Table<EnumRRIClassification> EnumRRIClassifications
		{
			get
			{
				return this.GetTable<EnumRRIClassification>();
			}
		}
		
		public System.Data.Linq.Table<EnumRRIInstruction> EnumRRIInstructions
		{
			get
			{
				return this.GetTable<EnumRRIInstruction>();
			}
		}
		
		public System.Data.Linq.Table<EnumRRIVehicleType> EnumRRIVehicleTypes
		{
			get
			{
				return this.GetTable<EnumRRIVehicleType>();
			}
		}
		
		public System.Data.Linq.Table<EnumRRIVehicleUse> EnumRRIVehicleUses
		{
			get
			{
				return this.GetTable<EnumRRIVehicleUse>();
			}
		}
		
		public System.Data.Linq.Table<InformationPoint> InformationPoints
		{
			get
			{
				return this.GetTable<InformationPoint>();
			}
		}
		
		public System.Data.Linq.Table<Link> Links
		{
			get
			{
				return this.GetTable<Link>();
			}
		}
		
		public System.Data.Linq.Table<LinkUserAttribute> LinkUserAttributes
		{
			get
			{
				return this.GetTable<LinkUserAttribute>();
			}
		}
		
		public System.Data.Linq.Table<NamedDate> NamedDates
		{
			get
			{
				return this.GetTable<NamedDate>();
			}
		}
		
		public System.Data.Linq.Table<NamedTime> NamedTimes
		{
			get
			{
				return this.GetTable<NamedTime>();
			}
		}
		
		public System.Data.Linq.Table<Node> Nodes
		{
			get
			{
				return this.GetTable<Node>();
			}
		}
		
		public System.Data.Linq.Table<NodeUserAttribute> NodeUserAttributes
		{
			get
			{
				return this.GetTable<NodeUserAttribute>();
			}
		}
		
		public System.Data.Linq.Table<RestrictionDefinition> RestrictionDefinitions
		{
			get
			{
				return this.GetTable<RestrictionDefinition>();
			}
		}
		
		public System.Data.Linq.Table<RestrictionPriority> RestrictionPriorities
		{
			get
			{
				return this.GetTable<RestrictionPriority>();
			}
		}
		
		public System.Data.Linq.Table<RoadLink> RoadLinks
		{
			get
			{
				return this.GetTable<RoadLink>();
			}
		}
		
		public System.Data.Linq.Table<RoadNetTotal> RoadNetTotals
		{
			get
			{
				return this.GetTable<RoadNetTotal>();
			}
		}
		
		public System.Data.Linq.Table<Road> Roads
		{
			get
			{
				return this.GetTable<Road>();
			}
		}
		
		public System.Data.Linq.Table<RRILink> RRILinks
		{
			get
			{
				return this.GetTable<RRILink>();
			}
		}
		
		public System.Data.Linq.Table<RRINode> RRINodes
		{
			get
			{
				return this.GetTable<RRINode>();
			}
		}
		
		public System.Data.Linq.Table<RRIRouteDirectedLink> RRIRouteDirectedLinks
		{
			get
			{
				return this.GetTable<RRIRouteDirectedLink>();
			}
		}
		
		public System.Data.Linq.Table<RRIRoute> RRIRoutes
		{
			get
			{
				return this.GetTable<RRIRoute>();
			}
		}
		
		public System.Data.Linq.Table<RRIRouteText> RRIRouteTexts
		{
			get
			{
				return this.GetTable<RRIRouteText>();
			}
		}
		
		public System.Data.Linq.Table<temp_DebugLog> temp_DebugLogs
		{
			get
			{
				return this.GetTable<temp_DebugLog>();
			}
		}
		
		public System.Data.Linq.Table<temp_deletedLink> temp_deletedLinks
		{
			get
			{
				return this.GetTable<temp_deletedLink>();
			}
		}
		
		public System.Data.Linq.Table<temp_LinksOriginal> temp_LinksOriginals
		{
			get
			{
				return this.GetTable<temp_LinksOriginal>();
			}
		}
		
		public System.Data.Linq.Table<temp_LinkUserAttributesOriginal> temp_LinkUserAttributesOriginals
		{
			get
			{
				return this.GetTable<temp_LinkUserAttributesOriginal>();
			}
		}
		
		public System.Data.Linq.Table<temp_PathLink> temp_PathLinks
		{
			get
			{
				return this.GetTable<temp_PathLink>();
			}
		}
		
		public System.Data.Linq.Table<temp_PathLinksOriginal> temp_PathLinksOriginals
		{
			get
			{
				return this.GetTable<temp_PathLinksOriginal>();
			}
		}
		
		public System.Data.Linq.Table<VehicleType> VehicleTypes
		{
			get
			{
				return this.GetTable<VehicleType>();
			}
		}
		
		public System.Data.Linq.Table<VersionInfo> VersionInfos
		{
			get
			{
				return this.GetTable<VersionInfo>();
			}
		}
	}
	
	[Table(Name="dbo.AccessRestrictionDates")]
	public partial class AccessRestrictionDate
	{
		
		private int _link;
		
		private int _groupKey;
		
		private string _startDate;
		
		private string _endDate;
		
		public AccessRestrictionDate()
		{
		}
		
		[Column(Storage="_link", DbType="Int NOT NULL")]
		public int link
		{
			get
			{
				return this._link;
			}
			set
			{
				if ((this._link != value))
				{
					this._link = value;
				}
			}
		}
		
		[Column(Storage="_groupKey", DbType="Int NOT NULL")]
		public int groupKey
		{
			get
			{
				return this._groupKey;
			}
			set
			{
				if ((this._groupKey != value))
				{
					this._groupKey = value;
				}
			}
		}
		
		[Column(Storage="_startDate", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string startDate
		{
			get
			{
				return this._startDate;
			}
			set
			{
				if ((this._startDate != value))
				{
					this._startDate = value;
				}
			}
		}
		
		[Column(Storage="_endDate", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string endDate
		{
			get
			{
				return this._endDate;
			}
			set
			{
				if ((this._endDate != value))
				{
					this._endDate = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.AccessRestrictions")]
	public partial class AccessRestriction
	{
		
		private int _link;
		
		private int _direction;
		
		private System.Nullable<int> _groupKey;
		
		private int _AppliesTo;
		
		private int _dayMask;
		
		private int _dateType;
		
		private int _timeType;
		
		private string _name;
		
		public AccessRestriction()
		{
		}
		
		[Column(Storage="_link", DbType="Int NOT NULL")]
		public int link
		{
			get
			{
				return this._link;
			}
			set
			{
				if ((this._link != value))
				{
					this._link = value;
				}
			}
		}
		
		[Column(Storage="_direction", DbType="Int NOT NULL")]
		public int direction
		{
			get
			{
				return this._direction;
			}
			set
			{
				if ((this._direction != value))
				{
					this._direction = value;
				}
			}
		}
		
		[Column(Storage="_groupKey", DbType="Int")]
		public System.Nullable<int> groupKey
		{
			get
			{
				return this._groupKey;
			}
			set
			{
				if ((this._groupKey != value))
				{
					this._groupKey = value;
				}
			}
		}
		
		[Column(Storage="_AppliesTo", DbType="Int NOT NULL")]
		public int AppliesTo
		{
			get
			{
				return this._AppliesTo;
			}
			set
			{
				if ((this._AppliesTo != value))
				{
					this._AppliesTo = value;
				}
			}
		}
		
		[Column(Storage="_dayMask", DbType="Int NOT NULL")]
		public int dayMask
		{
			get
			{
				return this._dayMask;
			}
			set
			{
				if ((this._dayMask != value))
				{
					this._dayMask = value;
				}
			}
		}
		
		[Column(Storage="_dateType", DbType="Int NOT NULL")]
		public int dateType
		{
			get
			{
				return this._dateType;
			}
			set
			{
				if ((this._dateType != value))
				{
					this._dateType = value;
				}
			}
		}
		
		[Column(Storage="_timeType", DbType="Int NOT NULL")]
		public int timeType
		{
			get
			{
				return this._timeType;
			}
			set
			{
				if ((this._timeType != value))
				{
					this._timeType = value;
				}
			}
		}
		
		[Column(Storage="_name", DbType="VarChar(250)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.AccessRestrictionTimes")]
	public partial class AccessRestrictionTime
	{
		
		private int _link;
		
		private int _groupKey;
		
		private string _startTime;
		
		private string _endTime;
		
		public AccessRestrictionTime()
		{
		}
		
		[Column(Storage="_link", DbType="Int NOT NULL")]
		public int link
		{
			get
			{
				return this._link;
			}
			set
			{
				if ((this._link != value))
				{
					this._link = value;
				}
			}
		}
		
		[Column(Storage="_groupKey", DbType="Int NOT NULL")]
		public int groupKey
		{
			get
			{
				return this._groupKey;
			}
			set
			{
				if ((this._groupKey != value))
				{
					this._groupKey = value;
				}
			}
		}
		
		[Column(Storage="_startTime", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string startTime
		{
			get
			{
				return this._startTime;
			}
			set
			{
				if ((this._startTime != value))
				{
					this._startTime = value;
				}
			}
		}
		
		[Column(Storage="_endTime", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string endTime
		{
			get
			{
				return this._endTime;
			}
			set
			{
				if ((this._endTime != value))
				{
					this._endTime = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.AttributeDefinition")]
	public partial class AttributeDefinition
	{
		
		private string _Type;
		
		private string _Name;
		
		private string _Value;
		
		private short _ArrayIndex;
		
		private long _Mask;
		
		private string _Direction;
		
		private string _Direction_Value;
		
		public AttributeDefinition()
		{
		}
		
		[Column(Storage="_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[Column(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[Column(Storage="_Value", DbType="VarChar(50)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
		
		[Column(Storage="_ArrayIndex", DbType="SmallInt NOT NULL")]
		public short ArrayIndex
		{
			get
			{
				return this._ArrayIndex;
			}
			set
			{
				if ((this._ArrayIndex != value))
				{
					this._ArrayIndex = value;
				}
			}
		}
		
		[Column(Storage="_Mask", DbType="BigInt NOT NULL")]
		public long Mask
		{
			get
			{
				return this._Mask;
			}
			set
			{
				if ((this._Mask != value))
				{
					this._Mask = value;
				}
			}
		}
		
		[Column(Storage="_Direction", DbType="VarChar(5)")]
		public string Direction
		{
			get
			{
				return this._Direction;
			}
			set
			{
				if ((this._Direction != value))
				{
					this._Direction = value;
				}
			}
		}
		
		[Column(Storage="_Direction_Value", DbType="VarChar(20)")]
		public string Direction_Value
		{
			get
			{
				return this._Direction_Value;
			}
			set
			{
				if ((this._Direction_Value != value))
				{
					this._Direction_Value = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.AttributeList")]
	public partial class AttributeList
	{
		
		private string _name;
		
		private string _value;
		
		private bool _node;
		
		private short _arrayindex;
		
		private long _ATOB_mask;
		
		private long _BTOA_mask;
		
		public AttributeList()
		{
		}
		
		[Column(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[Column(Storage="_value", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this._value = value;
				}
			}
		}
		
		[Column(Storage="_node", DbType="Bit NOT NULL")]
		public bool node
		{
			get
			{
				return this._node;
			}
			set
			{
				if ((this._node != value))
				{
					this._node = value;
				}
			}
		}
		
		[Column(Storage="_arrayindex", DbType="SmallInt NOT NULL")]
		public short arrayindex
		{
			get
			{
				return this._arrayindex;
			}
			set
			{
				if ((this._arrayindex != value))
				{
					this._arrayindex = value;
				}
			}
		}
		
		[Column(Storage="_ATOB_mask", DbType="BigInt NOT NULL")]
		public long ATOB_mask
		{
			get
			{
				return this._ATOB_mask;
			}
			set
			{
				if ((this._ATOB_mask != value))
				{
					this._ATOB_mask = value;
				}
			}
		}
		
		[Column(Storage="_BTOA_mask", DbType="BigInt NOT NULL")]
		public long BTOA_mask
		{
			get
			{
				return this._BTOA_mask;
			}
			set
			{
				if ((this._BTOA_mask != value))
				{
					this._BTOA_mask = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.ConditionalAttributes")]
	public partial class ConditionalAttribute
	{
		
		private string _SourceDescription;
		
		private long _SourceAttribute;
		
		private short _SourceIndex;
		
		private long _SetAttribute;
		
		private short _SetIndex;
		
		private long _SetValue;
		
		private string _SetDescription;
		
		public ConditionalAttribute()
		{
		}
		
		[Column(Storage="_SourceDescription", DbType="VarChar(50)")]
		public string SourceDescription
		{
			get
			{
				return this._SourceDescription;
			}
			set
			{
				if ((this._SourceDescription != value))
				{
					this._SourceDescription = value;
				}
			}
		}
		
		[Column(Storage="_SourceAttribute", DbType="BigInt NOT NULL")]
		public long SourceAttribute
		{
			get
			{
				return this._SourceAttribute;
			}
			set
			{
				if ((this._SourceAttribute != value))
				{
					this._SourceAttribute = value;
				}
			}
		}
		
		[Column(Storage="_SourceIndex", DbType="SmallInt NOT NULL")]
		public short SourceIndex
		{
			get
			{
				return this._SourceIndex;
			}
			set
			{
				if ((this._SourceIndex != value))
				{
					this._SourceIndex = value;
				}
			}
		}
		
		[Column(Storage="_SetAttribute", DbType="BigInt NOT NULL")]
		public long SetAttribute
		{
			get
			{
				return this._SetAttribute;
			}
			set
			{
				if ((this._SetAttribute != value))
				{
					this._SetAttribute = value;
				}
			}
		}
		
		[Column(Storage="_SetIndex", DbType="SmallInt NOT NULL")]
		public short SetIndex
		{
			get
			{
				return this._SetIndex;
			}
			set
			{
				if ((this._SetIndex != value))
				{
					this._SetIndex = value;
				}
			}
		}
		
		[Column(Storage="_SetValue", DbType="BigInt NOT NULL")]
		public long SetValue
		{
			get
			{
				return this._SetValue;
			}
			set
			{
				if ((this._SetValue != value))
				{
					this._SetValue = value;
				}
			}
		}
		
		[Column(Storage="_SetDescription", DbType="VarChar(50)")]
		public string SetDescription
		{
			get
			{
				return this._SetDescription;
			}
			set
			{
				if ((this._SetDescription != value))
				{
					this._SetDescription = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.DayTypes")]
	public partial class DayType
	{
		
		private string _name;
		
		private int _mask;
		
		public DayType()
		{
		}
		
		[Column(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[Column(Storage="_mask", DbType="Int NOT NULL")]
		public int mask
		{
			get
			{
				return this._mask;
			}
			set
			{
				if ((this._mask != value))
				{
					this._mask = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.EnumDirection")]
	public partial class EnumDirection
	{
		
		private System.Nullable<int> _ID;
		
		private string _Name;
		
		public EnumDirection()
		{
		}
		
		[Column(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(30)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.EnumRoadType")]
	public partial class EnumRoadType
	{
		
		private System.Nullable<int> _ID;
		
		private string _Name;
		
		public EnumRoadType()
		{
		}
		
		[Column(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(30)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.EnumRRIClassification")]
	public partial class EnumRRIClassification
	{
		
		private System.Nullable<int> _ID;
		
		private string _Name;
		
		public EnumRRIClassification()
		{
		}
		
		[Column(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(30)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.EnumRRIInstruction")]
	public partial class EnumRRIInstruction
	{
		
		private System.Nullable<int> _ID;
		
		private string _Name;
		
		public EnumRRIInstruction()
		{
		}
		
		[Column(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(30)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.EnumRRIVehicleType")]
	public partial class EnumRRIVehicleType
	{
		
		private System.Nullable<int> _ID;
		
		private string _Name;
		
		public EnumRRIVehicleType()
		{
		}
		
		[Column(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(30)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.EnumRRIVehicleUse")]
	public partial class EnumRRIVehicleUse
	{
		
		private System.Nullable<int> _ID;
		
		private string _Name;
		
		public EnumRRIVehicleUse()
		{
		}
		
		[Column(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(30)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.InformationPoints")]
	public partial class InformationPoint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Toid;
		
		private System.Nullable<int> _Easting;
		
		private System.Nullable<int> _Northing;
		
		private string _Text;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnToidChanging(string value);
    partial void OnToidChanged();
    partial void OnEastingChanging(System.Nullable<int> value);
    partial void OnEastingChanged();
    partial void OnNorthingChanging(System.Nullable<int> value);
    partial void OnNorthingChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    #endregion
		
		public InformationPoint()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Toid", DbType="VarChar(55)")]
		public string Toid
		{
			get
			{
				return this._Toid;
			}
			set
			{
				if ((this._Toid != value))
				{
					this.OnToidChanging(value);
					this.SendPropertyChanging();
					this._Toid = value;
					this.SendPropertyChanged("Toid");
					this.OnToidChanged();
				}
			}
		}
		
		[Column(Storage="_Easting", DbType="Int")]
		public System.Nullable<int> Easting
		{
			get
			{
				return this._Easting;
			}
			set
			{
				if ((this._Easting != value))
				{
					this.OnEastingChanging(value);
					this.SendPropertyChanging();
					this._Easting = value;
					this.SendPropertyChanged("Easting");
					this.OnEastingChanged();
				}
			}
		}
		
		[Column(Storage="_Northing", DbType="Int")]
		public System.Nullable<int> Northing
		{
			get
			{
				return this._Northing;
			}
			set
			{
				if ((this._Northing != value))
				{
					this.OnNorthingChanging(value);
					this.SendPropertyChanging();
					this._Northing = value;
					this.SendPropertyChanged("Northing");
					this.OnNorthingChanged();
				}
			}
		}
		
		[Column(Storage="_Text", DbType="NVarChar(MAX)")]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Links")]
	public partial class Link : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Toid;
		
		private System.Nullable<double> _Length;
		
		private System.Nullable<int> _ANode;
		
		private System.Nullable<int> _BNode;
		
		private System.Nullable<short> _AGrade;
		
		private System.Nullable<short> _BGrade;
		
		private System.Nullable<int> _Road;
		
		private string _Polyline;
		
		private System.Nullable<long> _Attributes;
		
		private System.Nullable<short> _RoadNumber;
		
		private string _ReferenceToLink;
		
		private System.Nullable<double> _StartDistanceFromStart;
		
		private System.Nullable<double> _EndDistanceFromStart;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnToidChanging(string value);
    partial void OnToidChanged();
    partial void OnLengthChanging(System.Nullable<double> value);
    partial void OnLengthChanged();
    partial void OnANodeChanging(System.Nullable<int> value);
    partial void OnANodeChanged();
    partial void OnBNodeChanging(System.Nullable<int> value);
    partial void OnBNodeChanged();
    partial void OnAGradeChanging(System.Nullable<short> value);
    partial void OnAGradeChanged();
    partial void OnBGradeChanging(System.Nullable<short> value);
    partial void OnBGradeChanged();
    partial void OnRoadChanging(System.Nullable<int> value);
    partial void OnRoadChanged();
    partial void OnPolylineChanging(string value);
    partial void OnPolylineChanged();
    partial void OnAttributesChanging(System.Nullable<long> value);
    partial void OnAttributesChanged();
    partial void OnRoadNumberChanging(System.Nullable<short> value);
    partial void OnRoadNumberChanged();
    partial void OnReferenceToLinkChanging(string value);
    partial void OnReferenceToLinkChanged();
    partial void OnStartDistanceFromStartChanging(System.Nullable<double> value);
    partial void OnStartDistanceFromStartChanged();
    partial void OnEndDistanceFromStartChanging(System.Nullable<double> value);
    partial void OnEndDistanceFromStartChanged();
    #endregion
		
		public Link()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Toid", DbType="VarChar(55)")]
		public string Toid
		{
			get
			{
				return this._Toid;
			}
			set
			{
				if ((this._Toid != value))
				{
					this.OnToidChanging(value);
					this.SendPropertyChanging();
					this._Toid = value;
					this.SendPropertyChanged("Toid");
					this.OnToidChanged();
				}
			}
		}
		
		[Column(Storage="_Length", DbType="Float")]
		public System.Nullable<double> Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[Column(Storage="_ANode", DbType="Int")]
		public System.Nullable<int> ANode
		{
			get
			{
				return this._ANode;
			}
			set
			{
				if ((this._ANode != value))
				{
					this.OnANodeChanging(value);
					this.SendPropertyChanging();
					this._ANode = value;
					this.SendPropertyChanged("ANode");
					this.OnANodeChanged();
				}
			}
		}
		
		[Column(Storage="_BNode", DbType="Int")]
		public System.Nullable<int> BNode
		{
			get
			{
				return this._BNode;
			}
			set
			{
				if ((this._BNode != value))
				{
					this.OnBNodeChanging(value);
					this.SendPropertyChanging();
					this._BNode = value;
					this.SendPropertyChanged("BNode");
					this.OnBNodeChanged();
				}
			}
		}
		
		[Column(Storage="_AGrade", DbType="SmallInt")]
		public System.Nullable<short> AGrade
		{
			get
			{
				return this._AGrade;
			}
			set
			{
				if ((this._AGrade != value))
				{
					this.OnAGradeChanging(value);
					this.SendPropertyChanging();
					this._AGrade = value;
					this.SendPropertyChanged("AGrade");
					this.OnAGradeChanged();
				}
			}
		}
		
		[Column(Storage="_BGrade", DbType="SmallInt")]
		public System.Nullable<short> BGrade
		{
			get
			{
				return this._BGrade;
			}
			set
			{
				if ((this._BGrade != value))
				{
					this.OnBGradeChanging(value);
					this.SendPropertyChanging();
					this._BGrade = value;
					this.SendPropertyChanged("BGrade");
					this.OnBGradeChanged();
				}
			}
		}
		
		[Column(Storage="_Road", DbType="Int")]
		public System.Nullable<int> Road
		{
			get
			{
				return this._Road;
			}
			set
			{
				if ((this._Road != value))
				{
					this.OnRoadChanging(value);
					this.SendPropertyChanging();
					this._Road = value;
					this.SendPropertyChanged("Road");
					this.OnRoadChanged();
				}
			}
		}
		
		[Column(Storage="_Polyline", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Polyline
		{
			get
			{
				return this._Polyline;
			}
			set
			{
				if ((this._Polyline != value))
				{
					this.OnPolylineChanging(value);
					this.SendPropertyChanging();
					this._Polyline = value;
					this.SendPropertyChanged("Polyline");
					this.OnPolylineChanged();
				}
			}
		}
		
		[Column(Storage="_Attributes", DbType="BigInt")]
		public System.Nullable<long> Attributes
		{
			get
			{
				return this._Attributes;
			}
			set
			{
				if ((this._Attributes != value))
				{
					this.OnAttributesChanging(value);
					this.SendPropertyChanging();
					this._Attributes = value;
					this.SendPropertyChanged("Attributes");
					this.OnAttributesChanged();
				}
			}
		}
		
		[Column(Storage="_RoadNumber", DbType="SmallInt")]
		public System.Nullable<short> RoadNumber
		{
			get
			{
				return this._RoadNumber;
			}
			set
			{
				if ((this._RoadNumber != value))
				{
					this.OnRoadNumberChanging(value);
					this.SendPropertyChanging();
					this._RoadNumber = value;
					this.SendPropertyChanged("RoadNumber");
					this.OnRoadNumberChanged();
				}
			}
		}
		
		[Column(Storage="_ReferenceToLink", DbType="VarChar(55)")]
		public string ReferenceToLink
		{
			get
			{
				return this._ReferenceToLink;
			}
			set
			{
				if ((this._ReferenceToLink != value))
				{
					this.OnReferenceToLinkChanging(value);
					this.SendPropertyChanging();
					this._ReferenceToLink = value;
					this.SendPropertyChanged("ReferenceToLink");
					this.OnReferenceToLinkChanged();
				}
			}
		}
		
		[Column(Storage="_StartDistanceFromStart", DbType="Float")]
		public System.Nullable<double> StartDistanceFromStart
		{
			get
			{
				return this._StartDistanceFromStart;
			}
			set
			{
				if ((this._StartDistanceFromStart != value))
				{
					this.OnStartDistanceFromStartChanging(value);
					this.SendPropertyChanging();
					this._StartDistanceFromStart = value;
					this.SendPropertyChanged("StartDistanceFromStart");
					this.OnStartDistanceFromStartChanged();
				}
			}
		}
		
		[Column(Storage="_EndDistanceFromStart", DbType="Float")]
		public System.Nullable<double> EndDistanceFromStart
		{
			get
			{
				return this._EndDistanceFromStart;
			}
			set
			{
				if ((this._EndDistanceFromStart != value))
				{
					this.OnEndDistanceFromStartChanging(value);
					this.SendPropertyChanging();
					this._EndDistanceFromStart = value;
					this.SendPropertyChanged("EndDistanceFromStart");
					this.OnEndDistanceFromStartChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.LinkUserAttributes")]
	public partial class LinkUserAttribute
	{
		
		private int _link;
		
		private int _index;
		
		private long _attributes;
		
		public LinkUserAttribute()
		{
		}
		
		[Column(Storage="_link", DbType="Int NOT NULL")]
		public int link
		{
			get
			{
				return this._link;
			}
			set
			{
				if ((this._link != value))
				{
					this._link = value;
				}
			}
		}
		
		[Column(Name="[index]", Storage="_index", DbType="Int NOT NULL")]
		public int index
		{
			get
			{
				return this._index;
			}
			set
			{
				if ((this._index != value))
				{
					this._index = value;
				}
			}
		}
		
		[Column(Storage="_attributes", DbType="BigInt NOT NULL")]
		public long attributes
		{
			get
			{
				return this._attributes;
			}
			set
			{
				if ((this._attributes != value))
				{
					this._attributes = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.NamedDates")]
	public partial class NamedDate
	{
		
		private string _name;
		
		private int _dateType;
		
		public NamedDate()
		{
		}
		
		[Column(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[Column(Storage="_dateType", DbType="Int NOT NULL")]
		public int dateType
		{
			get
			{
				return this._dateType;
			}
			set
			{
				if ((this._dateType != value))
				{
					this._dateType = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.NamedTimes")]
	public partial class NamedTime
	{
		
		private string _name;
		
		private int _timeType;
		
		public NamedTime()
		{
		}
		
		[Column(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[Column(Storage="_timeType", DbType="Int NOT NULL")]
		public int timeType
		{
			get
			{
				return this._timeType;
			}
			set
			{
				if ((this._timeType != value))
				{
					this._timeType = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Nodes")]
	public partial class Node : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Toid;
		
		private System.Nullable<int> _Easting;
		
		private System.Nullable<int> _Northing;
		
		private System.Nullable<long> _Attributes;
		
		private string _ReferenceToLink;
		
		private System.Nullable<double> _DistanceFromStart;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnToidChanging(string value);
    partial void OnToidChanged();
    partial void OnEastingChanging(System.Nullable<int> value);
    partial void OnEastingChanged();
    partial void OnNorthingChanging(System.Nullable<int> value);
    partial void OnNorthingChanged();
    partial void OnAttributesChanging(System.Nullable<long> value);
    partial void OnAttributesChanged();
    partial void OnReferenceToLinkChanging(string value);
    partial void OnReferenceToLinkChanged();
    partial void OnDistanceFromStartChanging(System.Nullable<double> value);
    partial void OnDistanceFromStartChanged();
    #endregion
		
		public Node()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Toid", DbType="VarChar(55)")]
		public string Toid
		{
			get
			{
				return this._Toid;
			}
			set
			{
				if ((this._Toid != value))
				{
					this.OnToidChanging(value);
					this.SendPropertyChanging();
					this._Toid = value;
					this.SendPropertyChanged("Toid");
					this.OnToidChanged();
				}
			}
		}
		
		[Column(Storage="_Easting", DbType="Int")]
		public System.Nullable<int> Easting
		{
			get
			{
				return this._Easting;
			}
			set
			{
				if ((this._Easting != value))
				{
					this.OnEastingChanging(value);
					this.SendPropertyChanging();
					this._Easting = value;
					this.SendPropertyChanged("Easting");
					this.OnEastingChanged();
				}
			}
		}
		
		[Column(Storage="_Northing", DbType="Int")]
		public System.Nullable<int> Northing
		{
			get
			{
				return this._Northing;
			}
			set
			{
				if ((this._Northing != value))
				{
					this.OnNorthingChanging(value);
					this.SendPropertyChanging();
					this._Northing = value;
					this.SendPropertyChanged("Northing");
					this.OnNorthingChanged();
				}
			}
		}
		
		[Column(Storage="_Attributes", DbType="BigInt")]
		public System.Nullable<long> Attributes
		{
			get
			{
				return this._Attributes;
			}
			set
			{
				if ((this._Attributes != value))
				{
					this.OnAttributesChanging(value);
					this.SendPropertyChanging();
					this._Attributes = value;
					this.SendPropertyChanged("Attributes");
					this.OnAttributesChanged();
				}
			}
		}
		
		[Column(Storage="_ReferenceToLink", DbType="VarChar(55)")]
		public string ReferenceToLink
		{
			get
			{
				return this._ReferenceToLink;
			}
			set
			{
				if ((this._ReferenceToLink != value))
				{
					this.OnReferenceToLinkChanging(value);
					this.SendPropertyChanging();
					this._ReferenceToLink = value;
					this.SendPropertyChanged("ReferenceToLink");
					this.OnReferenceToLinkChanged();
				}
			}
		}
		
		[Column(Storage="_DistanceFromStart", DbType="Float")]
		public System.Nullable<double> DistanceFromStart
		{
			get
			{
				return this._DistanceFromStart;
			}
			set
			{
				if ((this._DistanceFromStart != value))
				{
					this.OnDistanceFromStartChanging(value);
					this.SendPropertyChanging();
					this._DistanceFromStart = value;
					this.SendPropertyChanged("DistanceFromStart");
					this.OnDistanceFromStartChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.NodeUserAttributes")]
	public partial class NodeUserAttribute
	{
		
		private int _node;
		
		private int _index;
		
		private long _attributes;
		
		public NodeUserAttribute()
		{
		}
		
		[Column(Storage="_node", DbType="Int NOT NULL")]
		public int node
		{
			get
			{
				return this._node;
			}
			set
			{
				if ((this._node != value))
				{
					this._node = value;
				}
			}
		}
		
		[Column(Name="[index]", Storage="_index", DbType="Int NOT NULL")]
		public int index
		{
			get
			{
				return this._index;
			}
			set
			{
				if ((this._index != value))
				{
					this._index = value;
				}
			}
		}
		
		[Column(Storage="_attributes", DbType="BigInt NOT NULL")]
		public long attributes
		{
			get
			{
				return this._attributes;
			}
			set
			{
				if ((this._attributes != value))
				{
					this._attributes = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.RestrictionDefinition")]
	public partial class RestrictionDefinition
	{
		
		private string _Name;
		
		private string _Value;
		
		private short _Priority;
		
		public RestrictionDefinition()
		{
		}
		
		[Column(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[Column(Storage="_Value", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
		
		[Column(Storage="_Priority", DbType="SmallInt NOT NULL")]
		public short Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this._Priority = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.RestrictionPriority")]
	public partial class RestrictionPriority
	{
		
		private short _Priority;
		
		private System.Nullable<long> _Mask;
		
		private System.Nullable<short> _ArrayIndex;
		
		public RestrictionPriority()
		{
		}
		
		[Column(Storage="_Priority", DbType="SmallInt NOT NULL")]
		public short Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this._Priority = value;
				}
			}
		}
		
		[Column(Storage="_Mask", DbType="BigInt")]
		public System.Nullable<long> Mask
		{
			get
			{
				return this._Mask;
			}
			set
			{
				if ((this._Mask != value))
				{
					this._Mask = value;
				}
			}
		}
		
		[Column(Storage="_ArrayIndex", DbType="SmallInt")]
		public System.Nullable<short> ArrayIndex
		{
			get
			{
				return this._ArrayIndex;
			}
			set
			{
				if ((this._ArrayIndex != value))
				{
					this._ArrayIndex = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.RoadLinks")]
	public partial class RoadLink
	{
		
		private int _RoadId;
		
		private int _LinkId;
		
		public RoadLink()
		{
		}
		
		[Column(Storage="_RoadId", DbType="Int NOT NULL")]
		public int RoadId
		{
			get
			{
				return this._RoadId;
			}
			set
			{
				if ((this._RoadId != value))
				{
					this._RoadId = value;
				}
			}
		}
		
		[Column(Storage="_LinkId", DbType="Int NOT NULL")]
		public int LinkId
		{
			get
			{
				return this._LinkId;
			}
			set
			{
				if ((this._LinkId != value))
				{
					this._LinkId = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.RoadNetTotals")]
	public partial class RoadNetTotal
	{
		
		private string _Field;
		
		private System.Nullable<int> _Count;
		
		public RoadNetTotal()
		{
		}
		
		[Column(Storage="_Field", DbType="NChar(50)")]
		public string Field
		{
			get
			{
				return this._Field;
			}
			set
			{
				if ((this._Field != value))
				{
					this._Field = value;
				}
			}
		}
		
		[Column(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Roads")]
	public partial class Road : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Toid;
		
		private System.Nullable<int> _Type;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnToidChanging(string value);
    partial void OnToidChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Road()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Toid", DbType="VarChar(55)")]
		public string Toid
		{
			get
			{
				return this._Toid;
			}
			set
			{
				if ((this._Toid != value))
				{
					this.OnToidChanging(value);
					this.SendPropertyChanging();
					this._Toid = value;
					this.SendPropertyChanged("Toid");
					this.OnToidChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.RRILinks")]
	public partial class RRILink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Toid;
		
		private System.Nullable<int> _Instruction;
		
		private System.Nullable<int> _Classification;
		
		private System.Nullable<int> _VehicleType;
		
		private System.Nullable<int> _VehicleUse;
		
		private System.Nullable<int> _Link;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnToidChanging(string value);
    partial void OnToidChanged();
    partial void OnInstructionChanging(System.Nullable<int> value);
    partial void OnInstructionChanged();
    partial void OnClassificationChanging(System.Nullable<int> value);
    partial void OnClassificationChanged();
    partial void OnVehicleTypeChanging(System.Nullable<int> value);
    partial void OnVehicleTypeChanged();
    partial void OnVehicleUseChanging(System.Nullable<int> value);
    partial void OnVehicleUseChanged();
    partial void OnLinkChanging(System.Nullable<int> value);
    partial void OnLinkChanged();
    #endregion
		
		public RRILink()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Toid", DbType="VarChar(55)")]
		public string Toid
		{
			get
			{
				return this._Toid;
			}
			set
			{
				if ((this._Toid != value))
				{
					this.OnToidChanging(value);
					this.SendPropertyChanging();
					this._Toid = value;
					this.SendPropertyChanged("Toid");
					this.OnToidChanged();
				}
			}
		}
		
		[Column(Storage="_Instruction", DbType="Int")]
		public System.Nullable<int> Instruction
		{
			get
			{
				return this._Instruction;
			}
			set
			{
				if ((this._Instruction != value))
				{
					this.OnInstructionChanging(value);
					this.SendPropertyChanging();
					this._Instruction = value;
					this.SendPropertyChanged("Instruction");
					this.OnInstructionChanged();
				}
			}
		}
		
		[Column(Storage="_Classification", DbType="Int")]
		public System.Nullable<int> Classification
		{
			get
			{
				return this._Classification;
			}
			set
			{
				if ((this._Classification != value))
				{
					this.OnClassificationChanging(value);
					this.SendPropertyChanging();
					this._Classification = value;
					this.SendPropertyChanged("Classification");
					this.OnClassificationChanged();
				}
			}
		}
		
		[Column(Storage="_VehicleType", DbType="Int")]
		public System.Nullable<int> VehicleType
		{
			get
			{
				return this._VehicleType;
			}
			set
			{
				if ((this._VehicleType != value))
				{
					this.OnVehicleTypeChanging(value);
					this.SendPropertyChanging();
					this._VehicleType = value;
					this.SendPropertyChanged("VehicleType");
					this.OnVehicleTypeChanged();
				}
			}
		}
		
		[Column(Storage="_VehicleUse", DbType="Int")]
		public System.Nullable<int> VehicleUse
		{
			get
			{
				return this._VehicleUse;
			}
			set
			{
				if ((this._VehicleUse != value))
				{
					this.OnVehicleUseChanging(value);
					this.SendPropertyChanging();
					this._VehicleUse = value;
					this.SendPropertyChanged("VehicleUse");
					this.OnVehicleUseChanged();
				}
			}
		}
		
		[Column(Storage="_Link", DbType="Int")]
		public System.Nullable<int> Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this.OnLinkChanging(value);
					this.SendPropertyChanging();
					this._Link = value;
					this.SendPropertyChanged("Link");
					this.OnLinkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.RRINodes")]
	public partial class RRINode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Toid;
		
		private System.Nullable<int> _Instruction;
		
		private System.Nullable<int> _Classification;
		
		private System.Nullable<int> _VehicleType;
		
		private System.Nullable<int> _VehicleUse;
		
		private System.Nullable<int> _Node;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnToidChanging(string value);
    partial void OnToidChanged();
    partial void OnInstructionChanging(System.Nullable<int> value);
    partial void OnInstructionChanged();
    partial void OnClassificationChanging(System.Nullable<int> value);
    partial void OnClassificationChanged();
    partial void OnVehicleTypeChanging(System.Nullable<int> value);
    partial void OnVehicleTypeChanged();
    partial void OnVehicleUseChanging(System.Nullable<int> value);
    partial void OnVehicleUseChanged();
    partial void OnNodeChanging(System.Nullable<int> value);
    partial void OnNodeChanged();
    #endregion
		
		public RRINode()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Toid", DbType="VarChar(55)")]
		public string Toid
		{
			get
			{
				return this._Toid;
			}
			set
			{
				if ((this._Toid != value))
				{
					this.OnToidChanging(value);
					this.SendPropertyChanging();
					this._Toid = value;
					this.SendPropertyChanged("Toid");
					this.OnToidChanged();
				}
			}
		}
		
		[Column(Storage="_Instruction", DbType="Int")]
		public System.Nullable<int> Instruction
		{
			get
			{
				return this._Instruction;
			}
			set
			{
				if ((this._Instruction != value))
				{
					this.OnInstructionChanging(value);
					this.SendPropertyChanging();
					this._Instruction = value;
					this.SendPropertyChanged("Instruction");
					this.OnInstructionChanged();
				}
			}
		}
		
		[Column(Storage="_Classification", DbType="Int")]
		public System.Nullable<int> Classification
		{
			get
			{
				return this._Classification;
			}
			set
			{
				if ((this._Classification != value))
				{
					this.OnClassificationChanging(value);
					this.SendPropertyChanging();
					this._Classification = value;
					this.SendPropertyChanged("Classification");
					this.OnClassificationChanged();
				}
			}
		}
		
		[Column(Storage="_VehicleType", DbType="Int")]
		public System.Nullable<int> VehicleType
		{
			get
			{
				return this._VehicleType;
			}
			set
			{
				if ((this._VehicleType != value))
				{
					this.OnVehicleTypeChanging(value);
					this.SendPropertyChanging();
					this._VehicleType = value;
					this.SendPropertyChanged("VehicleType");
					this.OnVehicleTypeChanged();
				}
			}
		}
		
		[Column(Storage="_VehicleUse", DbType="Int")]
		public System.Nullable<int> VehicleUse
		{
			get
			{
				return this._VehicleUse;
			}
			set
			{
				if ((this._VehicleUse != value))
				{
					this.OnVehicleUseChanging(value);
					this.SendPropertyChanging();
					this._VehicleUse = value;
					this.SendPropertyChanged("VehicleUse");
					this.OnVehicleUseChanged();
				}
			}
		}
		
		[Column(Storage="_Node", DbType="Int")]
		public System.Nullable<int> Node
		{
			get
			{
				return this._Node;
			}
			set
			{
				if ((this._Node != value))
				{
					this.OnNodeChanging(value);
					this.SendPropertyChanging();
					this._Node = value;
					this.SendPropertyChanged("Node");
					this.OnNodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.RRIRouteDirectedLinks")]
	public partial class RRIRouteDirectedLink
	{
		
		private int _RRIRouteid;
		
		private int _Linkid;
		
		private int _direction;
		
		private int _position;
		
		public RRIRouteDirectedLink()
		{
		}
		
		[Column(Storage="_RRIRouteid", DbType="Int NOT NULL")]
		public int RRIRouteid
		{
			get
			{
				return this._RRIRouteid;
			}
			set
			{
				if ((this._RRIRouteid != value))
				{
					this._RRIRouteid = value;
				}
			}
		}
		
		[Column(Storage="_Linkid", DbType="Int NOT NULL")]
		public int Linkid
		{
			get
			{
				return this._Linkid;
			}
			set
			{
				if ((this._Linkid != value))
				{
					this._Linkid = value;
				}
			}
		}
		
		[Column(Storage="_direction", DbType="Int NOT NULL")]
		public int direction
		{
			get
			{
				return this._direction;
			}
			set
			{
				if ((this._direction != value))
				{
					this._direction = value;
				}
			}
		}
		
		[Column(Storage="_position", DbType="Int NOT NULL")]
		public int position
		{
			get
			{
				return this._position;
			}
			set
			{
				if ((this._position != value))
				{
					this._position = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.RRIRoutes")]
	public partial class RRIRoute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Toid;
		
		private System.Nullable<int> _Instruction;
		
		private System.Nullable<int> _Classification;
		
		private System.Nullable<int> _VehicleType;
		
		private System.Nullable<int> _VehicleUse;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnToidChanging(string value);
    partial void OnToidChanged();
    partial void OnInstructionChanging(System.Nullable<int> value);
    partial void OnInstructionChanged();
    partial void OnClassificationChanging(System.Nullable<int> value);
    partial void OnClassificationChanged();
    partial void OnVehicleTypeChanging(System.Nullable<int> value);
    partial void OnVehicleTypeChanged();
    partial void OnVehicleUseChanging(System.Nullable<int> value);
    partial void OnVehicleUseChanged();
    #endregion
		
		public RRIRoute()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Toid", DbType="VarChar(55)")]
		public string Toid
		{
			get
			{
				return this._Toid;
			}
			set
			{
				if ((this._Toid != value))
				{
					this.OnToidChanging(value);
					this.SendPropertyChanging();
					this._Toid = value;
					this.SendPropertyChanged("Toid");
					this.OnToidChanged();
				}
			}
		}
		
		[Column(Storage="_Instruction", DbType="Int")]
		public System.Nullable<int> Instruction
		{
			get
			{
				return this._Instruction;
			}
			set
			{
				if ((this._Instruction != value))
				{
					this.OnInstructionChanging(value);
					this.SendPropertyChanging();
					this._Instruction = value;
					this.SendPropertyChanged("Instruction");
					this.OnInstructionChanged();
				}
			}
		}
		
		[Column(Storage="_Classification", DbType="Int")]
		public System.Nullable<int> Classification
		{
			get
			{
				return this._Classification;
			}
			set
			{
				if ((this._Classification != value))
				{
					this.OnClassificationChanging(value);
					this.SendPropertyChanging();
					this._Classification = value;
					this.SendPropertyChanged("Classification");
					this.OnClassificationChanged();
				}
			}
		}
		
		[Column(Storage="_VehicleType", DbType="Int")]
		public System.Nullable<int> VehicleType
		{
			get
			{
				return this._VehicleType;
			}
			set
			{
				if ((this._VehicleType != value))
				{
					this.OnVehicleTypeChanging(value);
					this.SendPropertyChanging();
					this._VehicleType = value;
					this.SendPropertyChanged("VehicleType");
					this.OnVehicleTypeChanged();
				}
			}
		}
		
		[Column(Storage="_VehicleUse", DbType="Int")]
		public System.Nullable<int> VehicleUse
		{
			get
			{
				return this._VehicleUse;
			}
			set
			{
				if ((this._VehicleUse != value))
				{
					this.OnVehicleUseChanging(value);
					this.SendPropertyChanging();
					this._VehicleUse = value;
					this.SendPropertyChanged("VehicleUse");
					this.OnVehicleUseChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.RRIRouteText")]
	public partial class RRIRouteText
	{
		
		private int _RRIRouteID;
		
		private string _Text;
		
		public RRIRouteText()
		{
		}
		
		[Column(Storage="_RRIRouteID", DbType="Int NOT NULL")]
		public int RRIRouteID
		{
			get
			{
				return this._RRIRouteID;
			}
			set
			{
				if ((this._RRIRouteID != value))
				{
					this._RRIRouteID = value;
				}
			}
		}
		
		[Column(Storage="_Text", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this._Text = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.temp_DebugLogs")]
	public partial class temp_DebugLog
	{
		
		private System.Nullable<long> _i1;
		
		private string _c1;
		
		private System.Nullable<long> _i2;
		
		private string _c2;
		
		private System.Nullable<long> _i3;
		
		private string _c3;
		
		private string _comment;
		
		public temp_DebugLog()
		{
		}
		
		[Column(Storage="_i1", DbType="BigInt")]
		public System.Nullable<long> i1
		{
			get
			{
				return this._i1;
			}
			set
			{
				if ((this._i1 != value))
				{
					this._i1 = value;
				}
			}
		}
		
		[Column(Storage="_c1", DbType="VarChar(50)")]
		public string c1
		{
			get
			{
				return this._c1;
			}
			set
			{
				if ((this._c1 != value))
				{
					this._c1 = value;
				}
			}
		}
		
		[Column(Storage="_i2", DbType="BigInt")]
		public System.Nullable<long> i2
		{
			get
			{
				return this._i2;
			}
			set
			{
				if ((this._i2 != value))
				{
					this._i2 = value;
				}
			}
		}
		
		[Column(Storage="_c2", DbType="VarChar(50)")]
		public string c2
		{
			get
			{
				return this._c2;
			}
			set
			{
				if ((this._c2 != value))
				{
					this._c2 = value;
				}
			}
		}
		
		[Column(Storage="_i3", DbType="BigInt")]
		public System.Nullable<long> i3
		{
			get
			{
				return this._i3;
			}
			set
			{
				if ((this._i3 != value))
				{
					this._i3 = value;
				}
			}
		}
		
		[Column(Storage="_c3", DbType="VarChar(50)")]
		public string c3
		{
			get
			{
				return this._c3;
			}
			set
			{
				if ((this._c3 != value))
				{
					this._c3 = value;
				}
			}
		}
		
		[Column(Storage="_comment", DbType="VarChar(100)")]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this._comment = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.temp_deletedLinks")]
	public partial class temp_deletedLink
	{
		
		private int _ID;
		
		private string _Toid;
		
		private System.Nullable<double> _Length;
		
		private System.Nullable<int> _ANode;
		
		private System.Nullable<int> _BNode;
		
		private System.Nullable<short> _AGrade;
		
		private System.Nullable<short> _BGrade;
		
		private System.Nullable<int> _Road;
		
		private string _Polyline;
		
		private System.Nullable<long> _Attributes;
		
		private System.Nullable<short> _RoadNumber;
		
		private string _ReferenceToLink;
		
		private System.Nullable<double> _StartDistanceFromStart;
		
		private System.Nullable<double> _EndDistanceFromStart;
		
		public temp_deletedLink()
		{
		}
		
		[Column(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Toid", DbType="VarChar(55)")]
		public string Toid
		{
			get
			{
				return this._Toid;
			}
			set
			{
				if ((this._Toid != value))
				{
					this._Toid = value;
				}
			}
		}
		
		[Column(Storage="_Length", DbType="Float")]
		public System.Nullable<double> Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this._Length = value;
				}
			}
		}
		
		[Column(Storage="_ANode", DbType="Int")]
		public System.Nullable<int> ANode
		{
			get
			{
				return this._ANode;
			}
			set
			{
				if ((this._ANode != value))
				{
					this._ANode = value;
				}
			}
		}
		
		[Column(Storage="_BNode", DbType="Int")]
		public System.Nullable<int> BNode
		{
			get
			{
				return this._BNode;
			}
			set
			{
				if ((this._BNode != value))
				{
					this._BNode = value;
				}
			}
		}
		
		[Column(Storage="_AGrade", DbType="SmallInt")]
		public System.Nullable<short> AGrade
		{
			get
			{
				return this._AGrade;
			}
			set
			{
				if ((this._AGrade != value))
				{
					this._AGrade = value;
				}
			}
		}
		
		[Column(Storage="_BGrade", DbType="SmallInt")]
		public System.Nullable<short> BGrade
		{
			get
			{
				return this._BGrade;
			}
			set
			{
				if ((this._BGrade != value))
				{
					this._BGrade = value;
				}
			}
		}
		
		[Column(Storage="_Road", DbType="Int")]
		public System.Nullable<int> Road
		{
			get
			{
				return this._Road;
			}
			set
			{
				if ((this._Road != value))
				{
					this._Road = value;
				}
			}
		}
		
		[Column(Storage="_Polyline", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Polyline
		{
			get
			{
				return this._Polyline;
			}
			set
			{
				if ((this._Polyline != value))
				{
					this._Polyline = value;
				}
			}
		}
		
		[Column(Storage="_Attributes", DbType="BigInt")]
		public System.Nullable<long> Attributes
		{
			get
			{
				return this._Attributes;
			}
			set
			{
				if ((this._Attributes != value))
				{
					this._Attributes = value;
				}
			}
		}
		
		[Column(Storage="_RoadNumber", DbType="SmallInt")]
		public System.Nullable<short> RoadNumber
		{
			get
			{
				return this._RoadNumber;
			}
			set
			{
				if ((this._RoadNumber != value))
				{
					this._RoadNumber = value;
				}
			}
		}
		
		[Column(Storage="_ReferenceToLink", DbType="VarChar(55)")]
		public string ReferenceToLink
		{
			get
			{
				return this._ReferenceToLink;
			}
			set
			{
				if ((this._ReferenceToLink != value))
				{
					this._ReferenceToLink = value;
				}
			}
		}
		
		[Column(Storage="_StartDistanceFromStart", DbType="Float")]
		public System.Nullable<double> StartDistanceFromStart
		{
			get
			{
				return this._StartDistanceFromStart;
			}
			set
			{
				if ((this._StartDistanceFromStart != value))
				{
					this._StartDistanceFromStart = value;
				}
			}
		}
		
		[Column(Storage="_EndDistanceFromStart", DbType="Float")]
		public System.Nullable<double> EndDistanceFromStart
		{
			get
			{
				return this._EndDistanceFromStart;
			}
			set
			{
				if ((this._EndDistanceFromStart != value))
				{
					this._EndDistanceFromStart = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.temp_LinksOriginal")]
	public partial class temp_LinksOriginal
	{
		
		private int _ID;
		
		private System.Nullable<long> _Attributes;
		
		public temp_LinksOriginal()
		{
		}
		
		[Column(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_Attributes", DbType="BigInt")]
		public System.Nullable<long> Attributes
		{
			get
			{
				return this._Attributes;
			}
			set
			{
				if ((this._Attributes != value))
				{
					this._Attributes = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.temp_LinkUserAttributesOriginal")]
	public partial class temp_LinkUserAttributesOriginal
	{
		
		private int _link;
		
		private int _index;
		
		private long _attributes;
		
		public temp_LinkUserAttributesOriginal()
		{
		}
		
		[Column(Storage="_link", DbType="Int NOT NULL")]
		public int link
		{
			get
			{
				return this._link;
			}
			set
			{
				if ((this._link != value))
				{
					this._link = value;
				}
			}
		}
		
		[Column(Name="[index]", Storage="_index", DbType="Int NOT NULL")]
		public int index
		{
			get
			{
				return this._index;
			}
			set
			{
				if ((this._index != value))
				{
					this._index = value;
				}
			}
		}
		
		[Column(Storage="_attributes", DbType="BigInt NOT NULL")]
		public long attributes
		{
			get
			{
				return this._attributes;
			}
			set
			{
				if ((this._attributes != value))
				{
					this._attributes = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.temp_PathLinks")]
	public partial class temp_PathLink
	{
		
		private int _RoadId;
		
		private int _LinkId;
		
		public temp_PathLink()
		{
		}
		
		[Column(Storage="_RoadId", DbType="Int NOT NULL")]
		public int RoadId
		{
			get
			{
				return this._RoadId;
			}
			set
			{
				if ((this._RoadId != value))
				{
					this._RoadId = value;
				}
			}
		}
		
		[Column(Storage="_LinkId", DbType="Int NOT NULL")]
		public int LinkId
		{
			get
			{
				return this._LinkId;
			}
			set
			{
				if ((this._LinkId != value))
				{
					this._LinkId = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.temp_PathLinksOriginal")]
	public partial class temp_PathLinksOriginal
	{
		
		private int _RoadId;
		
		private int _LinkId;
		
		public temp_PathLinksOriginal()
		{
		}
		
		[Column(Storage="_RoadId", DbType="Int NOT NULL")]
		public int RoadId
		{
			get
			{
				return this._RoadId;
			}
			set
			{
				if ((this._RoadId != value))
				{
					this._RoadId = value;
				}
			}
		}
		
		[Column(Storage="_LinkId", DbType="Int NOT NULL")]
		public int LinkId
		{
			get
			{
				return this._LinkId;
			}
			set
			{
				if ((this._LinkId != value))
				{
					this._LinkId = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.VehicleTypes")]
	public partial class VehicleType
	{
		
		private string _name;
		
		private int _mask;
		
		public VehicleType()
		{
		}
		
		[Column(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[Column(Storage="_mask", DbType="Int NOT NULL")]
		public int mask
		{
			get
			{
				return this._mask;
			}
			set
			{
				if ((this._mask != value))
				{
					this._mask = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.VersionInfo")]
	public partial class VersionInfo
	{
		
		private string _VersionField;
		
		private string _VersionValue;
		
		public VersionInfo()
		{
		}
		
		[Column(Storage="_VersionField", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string VersionField
		{
			get
			{
				return this._VersionField;
			}
			set
			{
				if ((this._VersionField != value))
				{
					this._VersionField = value;
				}
			}
		}
		
		[Column(Storage="_VersionValue", DbType="VarChar(500)")]
		public string VersionValue
		{
			get
			{
				return this._VersionValue;
			}
			set
			{
				if ((this._VersionValue != value))
				{
					this._VersionValue = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
